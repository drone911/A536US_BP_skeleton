[SleepMngr][Error] Invalid DomainType [%d]
GetCurDomainTypeInSleep [%d]
[ProcConflictChecker] ProcStart : Update fail , RatType[%s] m_ProcRat[%s]
[ProcConflictChecker] ProcStart : RatType[%s]
[ProcConflictChecker] ProcStart : Update fail , RatType[%s] m_ProcRat[%s], Stack[%d], m_IsActive[%d], IsActive[%d]
[ProcConflictChecker] ProcStart : RatType[%s], Stack[%d], m_IsActive[%d->%d]
[ProcConflictChecker] ProcDone. RatType[%s]
[ProcConflictChecker] ProcDone : RatType mismatch. RatType[%s], m_ProcRat[%s]
[ProcConflictChecker] ProcDone. RatType[%s], Stack[%d], m_IsActive[%d->%d]
[ProcConflictChecker] ProcDone : RatType mismatch. RatType[%s], m_ProcRat[%s], m_IsActive[0][%d], m_IsActive[1][%d], IsActive[%d]
[ProcConflictChecker] GetActive. RatType[%s], m_IsActive[0][%d], m_IsActive[1][%d], ret[%d]
[ProcConflictChecker] : RatType[%s] is not using CheckProcConflict. always false return
[ProcConflictChecker] : RatType[%s], m_ProcRat[%s]
[SleepMngr][%s][%d] ResetSleepMngr
[SleepMngr][%s][%d] SetSleepState[%d]
[SleepMngr][%s][%d] GetSleepState[%d]
[SleepMngr][%s][%d] GetSleepState[%d]
[SleepMngr][%s][%d] SetRatActiveState[%d]
[SleepMngr][%s][%d] GetRatActiveState[%d]
[SleepMngr][%s][%d] GetRatActiveState[%d]
[SleepMngr][%s][%d] GetModemState[%s]
[SleepMngr]PeerStack error(%d)
[SleepMngr][%s][%d] GetPeerStackModemState[%s]
[SleepMngr][%s] GetHwModemState[%s]
[SleepMngr][%s][%d] GetStackState[%s]
[SleepMngr][%s][%d] SetDrxCycleMs[%d]
[SleepMngr][%s][%d] GetDrxCycleMs[%d]
[SleepMngr][%s][%d] SetWakeupReject[%d]
[SleepMngr][%s][%d] GetWakeupReject[%d]
[SleepMngr][%s][%d] GetWakeupReject[%d]
[SleepMngr][%s][%d] SetSleepAbort[%d]
[SleepMngr][%s][%d] GetSleepAbort[%d]
[SleepMngr][%s][%d] GetSleepAbort[%d]
[SleepMngr][%s][%d] SetWakeupCause[%d]
[SleepMngr][%s][%d] GetWakeupCause[%d]
[SleepMngr][%s][%d] SetEarlyWakeupCause[%d]
[SleepMngr][%s][%d] GetEarlyWakeupCause[%d]
[SleepMngr][%s][%d] SetCurPathDB
[SleepMngr][%s][%d] GetRtgInfo : RtgValue[%d], RtgNum[%d]
[SleepMngr][%s] GetNearestWakeupStack[%d]
[SleepMngr][%s] GetLastSleepStack[%d]
[SleepMngr][%s] GetCurReqStack[%d]
[SleepMngr][%s] CheckSwProc[%d]
[SleepMngr][%s] GetCurProcType[%s]
SleepMngr::ChangeDomain
[SleepMngr] ProcEnd. RatType[%s], bWakeup[%d], bIsWakeupProc[%d], bIsSleepProc[%d]
[SleepMngr] GetActive. RatType[%s], StModemState[0](%s), StModemState[1](%d), ret[%d]
[SleepMngr] SetWaitRat : already set WaitRat[%s][%s]
